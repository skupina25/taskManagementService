
server.port = 8081

# host.docker.internal <-- namest localhost spodi da dela baza znotri docker imagea

#spring.datasource.url=jdbc:postgresql://localhost:5432/taskManagementDb
#spring.datasource.username=taskManagementPostgres
#spring.datasource.password=rso2020Group25

#spring.datasource.url=jdbc:postgresql://dumbo.db.elephantsql.com:5432/tzhaeear
#spring.datasource.username=tzhaeear
#spring.datasource.password=3aVBRMrv4e6hGy0rPDKPpnn9wsVwx4aU

spring.application.name=taskManagementService

spring.datasource.url=${DBURL}
spring.datasource.username=${DBUSERNAME}
spring.datasource.password=${DBPASSWORD}

spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.hbm2ddl.auto=update

rest-properties.maintenance-mode=false

management.endpoints.web.exposure.include=health,prometheus,metrics
management.endpoints.web.base-path=/api/v1/checks
management.endpoint.health.show-details=always
management.endpoint.metrics.cache.time-to-live=10s



##spring.autoconfigure.exclude = org.keycloak.adapters.springboot.KeycloakAutoConfiguration
#
#keycloak.auth-server-url = ${KEYCLOAK_URL}
##keycloak.auth-server-url = http://localhost:8080/auth
#keycloak.realm = demo
##keycloak.ssl-required = external
#keycloak.resource = task-management-app
##keycloak.credentials.secret = 11111111-1111-1111-1111-111111111111
##keycloak.use-resource-role-mappings = true
#keycloak.public-client=true
#keycloak.bearer-only=true